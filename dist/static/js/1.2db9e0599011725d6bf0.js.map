{"version":3,"sources":["webpack:///src/views/test/select/src/select.vue","webpack:///./src/views/test/select/src/select.vue?c7b6","webpack:///./src/views/test/select/src/select.vue","webpack:///./src/views/test/scrollbar/src/util.js","webpack:///./src/views/test/scrollbar/src/bar.js","webpack:///./src/views/test/scrollbar/src/main.js","webpack:///./src/views/test/select/src/navigation-mixin.js"],"names":["sizeMap","src_select","navigation_mixin","this","elFormItemSize","documentMode","visible","clearable","selectDisabled","inputHovering","multiple","undefined","value","_this","created","query","hasExistingOption","size","disabled","ElInput","input","ElSelectMenu","select_dropdown","ElOption","src_option","ElTag","tag","ElScrollbar","main","Clickoutside","clickoutside","String","Boolean","Function","Number","_this2","resetInputHeight","val","cachedPlaceHolder","setSelected","_this3","handleIconShow","selectedLabel","focus","handleIconHide","blur","resetHoverIndex","$refs","selected","length","allowCreate","createdSelected","createdLabel","currentLabel","_this4","checkDefaultFirstOption","text","lastCharacter","_this5","previousQuery","filterMethod","remoteMethod","managePlaceholder","optionsCount","$el","target","handleScroll","_this6","option","i","isObject","Object","util","cachedOption","valueKey","isNull","newOption","_this7","result","event","_this8","doDestroy","hit","hitState","slice","pop","_this9","childNodes","tags","sizeInMap","Math","max","clientHeight","_this10","item","_this11","byClick","setSoftFocus","reference","arr","arguments","index","hoverIndex","toggleMenu","stopPropagation","filteredOptionsCount","width","resetInputWidth","_i","_this12","placeholder","onInputChange","handleOptionSelect","_this13","handleResize","select_src_select","render","_vm","_h","$createElement","_c","_self","directives","name","rawName","expression","staticClass","class","selectSize","on","click","$event","ref","style","max-width","inputWidth","collapseTags","attrs","closable","collapseTagSize","type","disable-transitions","close","deleteTag","_v","_s","_e","after-leave","_l","key","inputLength","autocomplete","autoComplete","debounce","remote","domProps","handleFocus","softFocus","keyup","keydown","resetInputState","_k","keyCode","preventDefault","navigateOptions","selectOption","deletePrevTag","compositionstart","handleComposition","compositionupdate","compositionend","composing","e","handleQueryChange","is-focus","currentPlaceholder","id","auto-complete","readonly","validate-event","handleBlur","nativeOn","debouncedOnInputChange","paste","mouseenter","mouseleave","model","callback","$$v","$slots","slot","_t","before-enter","handleMenuEnter","emptyText","append-to-body","popperAppendToBody","options","loading","is-empty","wrap-class","view-class","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__","BAR_MAP","vertical","offset","scroll","scrollSize","axis","client","direction","horizontal","src_bar","props","move","computed","bar","wrap","$parent","h","mousedown","clickTrackHandler","clickThumbHandler","_ref","translate","transform","msTransform","webkitTransform","renderThumbStyle","methods","startDrag","currentTarget","getBoundingClientRect","thumbPositionPercentage","abs","thumb","stopImmediatePropagation","cursorDown","dom","document","mouseMoveDocumentHandler","mouseUpDocumentHandler","onselectstart","prevPage","destroyed","components","Bar","native","wrapStyle","wrapClass","viewClass","viewStyle","noresize","default","data","sizeWidth","sizeHeight","moveX","moveY","gutter","scrollbar_width","gutterWith","gutterStyle","Array","isArray","marginRight","marginBottom","view","scrollTop","scrollLeft","clientWidth","update","heightPercentage","widthPercentage","scrollHeight","scrollWidth","mounted","$nextTick","resize_event","resize","beforeDestroy","hoverOption","optionsAllDisabled","filter","every","watch","forEach","hover","groupDisabled","scrollToOption"],"mappings":"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","file":"static/js/1.2db9e0599011725d6bf0.js","sourcesContent":["<template>\n  <div\n    class=\"el-select\"\n    :class=\"[selectSize ? 'el-select--' + selectSize : '']\"\n    @click.stop=\"toggleMenu\"\n    v-clickoutside=\"handleClose\">\n    <div\n      class=\"el-select__tags\"\n      v-if=\"multiple\"\n      ref=\"tags\"\n      :style=\"{ 'max-width': inputWidth - 32 + 'px' }\">\n      <span v-if=\"collapseTags && selected.length\">\n        <el-tag\n          :closable=\"!selectDisabled\"\n          :size=\"collapseTagSize\"\n          :hit=\"selected[0].hitState\"\n          type=\"info\"\n          @close=\"deleteTag($event, selected[0])\"\n          disable-transitions>\n          <span class=\"el-select__tags-text\">{{ selected[0].currentLabel }}</span>\n        </el-tag>\n        <el-tag\n          v-if=\"selected.length > 1\"\n          :closable=\"false\"\n          :size=\"collapseTagSize\"\n          type=\"info\"\n          disable-transitions>\n          <span class=\"el-select__tags-text\">+ {{ selected.length - 1 }}</span>\n        </el-tag>\n      </span>\n      <transition-group @after-leave=\"resetInputHeight\" v-if=\"!collapseTags\">\n        <el-tag\n          v-for=\"(item, index) in selected\"\n          :key=\"index\"\n          :closable=\"!selectDisabled\"\n          :size=\"collapseTagSize\"\n          :hit=\"item.hitState\"\n          type=\"info\"\n          @close=\"deleteTag($event, item, index)\"\n          disable-transitions>\n          <span class=\"el-select__tags-text\">{{ item.currentLabel }}</span>\n        </el-tag>\n      </transition-group>\n\n      <input\n        type=\"text\"\n        class=\"el-select__input\"\n        :class=\"[selectSize ? `is-${ selectSize }` : '']\"\n        :disabled=\"selectDisabled\"\n        :autocomplete=\"autoComplete\"\n        @focus=\"handleFocus\"\n        @blur=\"softFocus = false\"\n        @click.stop\n        @keyup=\"managePlaceholder\"\n        @keydown=\"resetInputState\"\n        @keydown.down.prevent=\"navigateOptions('next')\"\n        @keydown.up.prevent=\"navigateOptions('prev')\"\n        @keydown.enter.prevent=\"selectOption\"\n        @keydown.esc.stop.prevent=\"visible = false\"\n        @keydown.delete=\"deletePrevTag\"\n        @compositionstart=\"handleComposition\"\n        @compositionupdate=\"handleComposition\"\n        @compositionend=\"handleComposition\"\n        v-model=\"query\"\n        @input=\"e => handleQueryChange(e.target.value)\"\n        :debounce=\"remote ? 300 : 0\"\n        v-if=\"filterable\"\n        :style=\"{ width: inputLength + 'px', 'max-width': inputWidth - 42 + 'px' }\"\n        ref=\"input\">\n    </div>\n    <el-input\n      ref=\"reference\"\n      v-model=\"selectedLabel\"\n      type=\"text\"\n      :placeholder=\"currentPlaceholder\"\n      :name=\"name\"\n      :id=\"id\"\n      :auto-complete=\"autoComplete\"\n      :size=\"selectSize\"\n      :disabled=\"selectDisabled\"\n      :readonly=\"readonly\"\n      :validate-event=\"false\"\n      :class=\"{ 'is-focus': visible }\"\n      @focus=\"handleFocus\"\n      @blur=\"handleBlur\"\n      @keyup.native=\"debouncedOnInputChange\"\n      @keydown.native.down.stop.prevent=\"navigateOptions('next')\"\n      @keydown.native.up.stop.prevent=\"navigateOptions('prev')\"\n      @keydown.native.enter.prevent=\"selectOption\"\n      @keydown.native.esc.stop.prevent=\"visible = false\"\n      @keydown.native.tab=\"visible = false\"\n      @paste.native=\"debouncedOnInputChange\"\n      @mouseenter.native=\"inputHovering = true\"\n      @mouseleave.native=\"inputHovering = false\">\n      <template slot=\"prefix\" v-if=\"$slots.prefix\">\n        <slot name=\"prefix\"></slot>\n      </template>\n      <template slot=\"suffix\" v-if=\"$slots.suffix\">\n        <slot name=\"suffix\"></slot>\n      </template>\n      <!-- <i slot=\"suffix\"\n       :class=\"['el-select__caret', 'el-input__icon', 'el-icon-' + iconClass]\"\n       @click=\"handleIconClick\"\n      ></i> -->\n    </el-input>\n    <transition\n      name=\"el-zoom-in-top\"\n      @before-enter=\"handleMenuEnter\"\n      @after-leave=\"doDestroy\">\n      <el-select-menu\n        ref=\"popper\"\n        :append-to-body=\"popperAppendToBody\"\n        v-show=\"visible && emptyText !== false\">\n        <el-scrollbar\n          tag=\"ul\"\n          wrap-class=\"el-select-dropdown__wrap\"\n          view-class=\"el-select-dropdown__list\"\n          ref=\"scrollbar\"\n          :class=\"{ 'is-empty': !allowCreate && query && filteredOptionsCount === 0 }\"\n          v-show=\"options.length > 0 && !loading\">\n          <el-option\n            :value=\"query\"\n            created\n            v-if=\"showNewOption\">\n          </el-option>\n          <slot></slot>\n        </el-scrollbar>\n        <p\n          class=\"el-select-dropdown__empty\"\n          v-if=\"emptyText &&\n            (!allowCreate || loading || (allowCreate && options.length === 0 ))\">\n          {{ emptyText }}\n        </p>\n      </el-select-menu>\n    </transition>\n  </div>\n</template>\n\n<script type=\"text/babel\">\n  import Emitter from 'element-ui/src/mixins/emitter';\n  import Focus from 'element-ui/src/mixins/focus';\n  import Locale from 'element-ui/src/mixins/locale';\n  import ElInput from 'element-ui/packages/input';\n  import ElSelectMenu from './select-dropdown.vue';\n  import ElOption from './option.vue';\n  import ElTag from 'element-ui/packages/tag';\n  // import ElScrollbar from 'element-ui/packages/scrollbar';\n  import ElScrollbar from '@/views/test/scrollbar/src/main';\n  import debounce from 'throttle-debounce/debounce';\n  import Clickoutside from 'element-ui/src/utils/clickoutside';\n  import { addClass, removeClass, hasClass } from 'element-ui/src/utils/dom';\n  import { addResizeListener, removeResizeListener } from 'element-ui/src/utils/resize-event';\n  import { t } from 'element-ui/src/locale';\n  import scrollIntoView from 'element-ui/src/utils/scroll-into-view';\n  import { getValueByPath } from 'element-ui/src/utils/util';\n  import { valueEquals } from 'element-ui/src/utils/util';\n  import NavigationMixin from './navigation-mixin';\n  import { isKorean } from 'element-ui/src/utils/shared';\n\n  const sizeMap = {\n    'medium': 36,\n    'small': 32,\n    'mini': 28\n  };\n\n  export default {\n    mixins: [Emitter, Locale, Focus('reference'), NavigationMixin],\n\n\n\n    inject: {\n      elForm: {\n        default: ''\n      },\n\n      elFormItem: {\n        default: ''\n      }\n    },\n\n    provide() {\n      return {\n        'select': this\n      };\n    },\n\n    computed: {\n      _elFormItemSize() {\n        return (this.elFormItem || {}).elFormItemSize;\n      },\n\n      readonly() {\n        // trade-off for IE input readonly problem: https://github.com/ElemeFE/element/issues/10403\n        const isIE = !this.$isServer && !isNaN(Number(document.documentMode));\n        return !this.filterable || this.multiple || !isIE && !this.visible;\n      },\n\n      iconClass() {\n        let criteria = this.clearable &&\n          !this.selectDisabled &&\n          this.inputHovering &&\n          !this.multiple &&\n          this.value !== undefined &&\n          this.value !== null &&\n          this.value !== '';\n        return criteria ? 'circle-close is-show-close' : (this.remote && this.filterable ? '' : 'arrow-up');\n      },\n\n      debounce() {\n        return this.remote ? 300 : 0;\n      },\n\n      emptyText() {\n        if (this.loading) {\n          return this.loadingText || this.t('el.select.loading');\n        } else {\n          if (this.remote && this.query === '' && this.options.length === 0) return false;\n          if (this.filterable && this.query && this.options.length > 0 && this.filteredOptionsCount === 0) {\n            return this.noMatchText || this.t('el.select.noMatch');\n          }\n          if (this.options.length === 0) {\n            return this.noDataText || this.t('el.select.noData');\n          }\n        }\n        return null;\n      },\n\n      showNewOption() {\n        let hasExistingOption = this.options.filter(option => !option.created)\n          .some(option => option.currentLabel === this.query);\n        return this.filterable && this.allowCreate && this.query !== '' && !hasExistingOption;\n      },\n\n      selectSize() {\n        return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n      },\n\n      selectDisabled() {\n        return this.disabled || (this.elForm || {}).disabled;\n      },\n\n      collapseTagSize() {\n        return ['small', 'mini'].indexOf(this.selectSize) > -1\n          ? 'mini'\n          : 'small';\n      }\n    },\n\n    components: {\n      ElInput,\n      ElSelectMenu,\n      ElOption,\n      ElTag,\n      ElScrollbar\n    },\n\n    directives: { Clickoutside },\n\n    props: {\n      name: String,\n      id: String,\n      value: {\n        required: true\n      },\n      autoComplete: {\n        type: String,\n        default: 'off'\n      },\n      automaticDropdown: Boolean,\n      size: String,\n      disabled: Boolean,\n      clearable: Boolean,\n      filterable: Boolean,\n      allowCreate: Boolean,\n      loading: Boolean,\n      popperClass: String,\n      remote: Boolean,\n      loadingText: String,\n      noMatchText: String,\n      noDataText: String,\n      remoteMethod: Function,\n      filterMethod: Function,\n      multiple: Boolean,\n      multipleLimit: {\n        type: Number,\n        default: 0\n      },\n      placeholder: {\n        type: String,\n        default() {\n          return t('el.select.placeholder');\n        }\n      },\n      defaultFirstOption: Boolean,\n      reserveKeyword: Boolean,\n      valueKey: {\n        type: String,\n        default: 'value'\n      },\n      collapseTags: Boolean,\n      popperAppendToBody: {\n        type: Boolean,\n        default: true\n      }\n    },\n\n    data() {\n      return {\n        options: [],\n        cachedOptions: [],\n        createdLabel: null,\n        createdSelected: false,\n        selected: this.multiple ? [] : {},\n        inputLength: 20,\n        inputWidth: 0,\n        cachedPlaceHolder: '',\n        optionsCount: 0,\n        filteredOptionsCount: 0,\n        visible: false,\n        softFocus: false,\n        selectedLabel: '',\n        hoverIndex: -1,\n        query: '',\n        previousQuery: null,\n        inputHovering: false,\n        currentPlaceholder: '',\n        menuVisibleOnFocus: false,\n        isOnComposition: false,\n        isSilentBlur: false\n      };\n    },\n\n    watch: {\n      selectDisabled() {\n        this.$nextTick(() => {\n          this.resetInputHeight();\n        });\n      },\n\n      placeholder(val) {\n        this.cachedPlaceHolder = this.currentPlaceholder = val;\n      },\n\n      value(val, oldVal) {\n        if (this.multiple) {\n          this.resetInputHeight();\n          if (val.length > 0 || (this.$refs.input && this.query !== '')) {\n            this.currentPlaceholder = '';\n          } else {\n            this.currentPlaceholder = this.cachedPlaceHolder;\n          }\n          if (this.filterable && !this.reserveKeyword) {\n            this.query = '';\n            this.handleQueryChange(this.query);\n          }\n        }\n        this.setSelected();\n        if (this.filterable && !this.multiple) {\n          this.inputLength = 20;\n        }\n        if (!valueEquals(val, oldVal)) {\n          this.dispatch('ElFormItem', 'el.form.change', val);\n        }\n      },\n\n      visible(val) {\n        if (!val) {\n          this.handleIconHide();\n          this.broadcast('ElSelectDropdown', 'destroyPopper');\n          if (this.$refs.input) {\n            this.$refs.input.blur();\n          }\n          this.query = '';\n          this.previousQuery = null;\n          this.selectedLabel = '';\n          this.inputLength = 20;\n          this.resetHoverIndex();\n          this.$nextTick(() => {\n            if (this.$refs.input &&\n              this.$refs.input.value === '' &&\n              this.selected.length === 0) {\n              this.currentPlaceholder = this.cachedPlaceHolder;\n            }\n          });\n          if (!this.multiple) {\n            if (this.selected) {\n              if (this.filterable && this.allowCreate &&\n                this.createdSelected && this.createdLabel) {\n                this.selectedLabel = this.createdLabel;\n              } else {\n                this.selectedLabel = this.selected.currentLabel;\n              }\n              if (this.filterable) this.query = this.selectedLabel;\n            }\n          }\n        } else {\n          this.handleIconShow();\n          this.broadcast('ElSelectDropdown', 'updatePopper');\n          if (this.filterable) {\n            this.query = this.remote ? '' : this.selectedLabel;\n            this.handleQueryChange(this.query);\n            if (this.multiple) {\n              this.$refs.input.focus();\n            } else {\n              if (!this.remote) {\n                this.broadcast('ElOption', 'queryChange', '');\n                this.broadcast('ElOptionGroup', 'queryChange');\n              }\n              this.broadcast('ElInput', 'inputSelect');\n            }\n          }\n        }\n        this.$emit('visible-change', val);\n      },\n\n      options() {\n        if (this.$isServer) return;\n        this.$nextTick(() => {\n          this.broadcast('ElSelectDropdown', 'updatePopper');\n        });\n        if (this.multiple) {\n          this.resetInputHeight();\n        }\n        let inputs = this.$el.querySelectorAll('input');\n        if ([].indexOf.call(inputs, document.activeElement) === -1) {\n          this.setSelected();\n        }\n        if (this.defaultFirstOption && (this.filterable || this.remote) && this.filteredOptionsCount) {\n          this.checkDefaultFirstOption();\n        }\n      }\n    },\n\n    methods: {\n      handleComposition(event) {\n        const text = event.target.value;\n        if (event.type === 'compositionend') {\n          this.isOnComposition = false;\n          this.handleQueryChange(text);\n        } else {\n          const lastCharacter = text[text.length - 1] || '';\n          this.isOnComposition = !isKorean(lastCharacter);\n        }\n      },\n      handleQueryChange(val) {\n        if (this.previousQuery === val || this.isOnComposition) return;\n        if (\n          this.previousQuery === null &&\n          (typeof this.filterMethod === 'function' || typeof this.remoteMethod === 'function')\n        ) {\n          this.previousQuery = val;\n          return;\n        }\n        this.previousQuery = val;\n        this.$nextTick(() => {\n          if (this.visible) this.broadcast('ElSelectDropdown', 'updatePopper');\n        });\n        this.hoverIndex = -1;\n        if (this.multiple && this.filterable) {\n          const length = this.$refs.input.value.length * 15 + 20;\n          this.inputLength = this.collapseTags ? Math.min(50, length) : length;\n          this.managePlaceholder();\n          this.resetInputHeight();\n        }\n        if (this.remote && typeof this.remoteMethod === 'function') {\n          this.hoverIndex = -1;\n          this.remoteMethod(val);\n        } else if (typeof this.filterMethod === 'function') {\n          this.filterMethod(val);\n          this.broadcast('ElOptionGroup', 'queryChange');\n        } else {\n          this.filteredOptionsCount = this.optionsCount;\n          this.broadcast('ElOption', 'queryChange', val);\n          this.broadcast('ElOptionGroup', 'queryChange');\n        }\n        if (this.defaultFirstOption && (this.filterable || this.remote) && this.filteredOptionsCount) {\n          this.checkDefaultFirstOption();\n        }\n      },\n\n      handleIconHide() {\n        let icon = this.$el.querySelector('.el-input__icon');\n        if (icon) {\n          removeClass(icon, 'is-reverse');\n        }\n      },\n\n      handleIconShow() {\n        let icon = this.$el.querySelector('.el-input__icon');\n        if (icon && !hasClass(icon, 'el-icon-circle-close')) {\n          addClass(icon, 'is-reverse');\n        }\n      },\n\n      scrollToOption(option) {\n        const target = Array.isArray(option) && option[0] ? option[0].$el : option.$el;\n        if (this.$refs.popper && target) {\n          const menu = this.$refs.popper.$el.querySelector('.el-select-dropdown__wrap');\n          scrollIntoView(menu, target);\n        }\n        this.$refs.scrollbar && this.$refs.scrollbar.handleScroll();\n      },\n\n      handleMenuEnter() {\n        this.$nextTick(() => this.scrollToOption(this.selected));\n      },\n\n      emitChange(val) {\n        if (!valueEquals(this.value, val)) {\n          this.$emit('change', val);\n        }\n      },\n\n      getOption(value) {\n        let option;\n        const isObject = Object.prototype.toString.call(value).toLowerCase() === '[object object]';\n        const isNull = Object.prototype.toString.call(value).toLowerCase() === '[object null]';\n\n        for (let i = this.cachedOptions.length - 1; i >= 0; i--) {\n          const cachedOption = this.cachedOptions[i];\n          const isEqual = isObject\n            ? getValueByPath(cachedOption.value, this.valueKey) === getValueByPath(value, this.valueKey)\n            : cachedOption.value === value;\n          if (isEqual) {\n            option = cachedOption;\n            break;\n          }\n        }\n        if (option) return option;\n        const label = (!isObject && !isNull)\n          ? value : '';\n        let newOption = {\n          value: value,\n          currentLabel: label\n        };\n        if (this.multiple) {\n          newOption.hitState = false;\n        }\n        return newOption;\n      },\n\n      setSelected() {\n        if (!this.multiple) {\n          let option = this.getOption(this.value);\n          if (option.created) {\n            this.createdLabel = option.currentLabel;\n            this.createdSelected = true;\n          } else {\n            this.createdSelected = false;\n          }\n          this.selectedLabel = option.currentLabel;\n          this.selected = option;\n          if (this.filterable) this.query = this.selectedLabel;\n          return;\n        }\n        let result = [];\n        if (Array.isArray(this.value)) {\n          this.value.forEach(value => {\n            result.push(this.getOption(value));\n          });\n        }\n        this.selected = result;\n        this.$nextTick(() => {\n          this.resetInputHeight();\n        });\n      },\n\n      handleFocus(event) {\n        if (!this.softFocus) {\n          if (this.automaticDropdown || this.filterable) {\n            this.visible = true;\n            this.menuVisibleOnFocus = true;\n          }\n          this.$emit('focus', event);\n        } else {\n          this.softFocus = false;\n        }\n      },\n\n      blur() {\n        this.visible = false;\n        this.$refs.reference.blur();\n      },\n\n      handleBlur(event) {\n        setTimeout(() => {\n          if (this.isSilentBlur) {\n            this.isSilentBlur = false;\n          } else {\n            this.$emit('blur', event);\n          }\n        }, 50);\n        this.softFocus = false;\n      },\n\n      handleIconClick(event) {\n        if (this.iconClass.indexOf('circle-close') > -1) {\n          this.deleteSelected(event);\n        }\n      },\n\n      doDestroy() {\n        this.$refs.popper && this.$refs.popper.doDestroy();\n      },\n\n      handleClose() {\n        this.visible = false;\n      },\n\n      toggleLastOptionHitState(hit) {\n        if (!Array.isArray(this.selected)) return;\n        const option = this.selected[this.selected.length - 1];\n        if (!option) return;\n\n        if (hit === true || hit === false) {\n          option.hitState = hit;\n          return hit;\n        }\n\n        option.hitState = !option.hitState;\n        return option.hitState;\n      },\n\n      deletePrevTag(e) {\n        if (e.target.value.length <= 0 && !this.toggleLastOptionHitState()) {\n          const value = this.value.slice();\n          value.pop();\n          this.$emit('input', value);\n          this.emitChange(value);\n        }\n      },\n\n      managePlaceholder() {\n        if (this.currentPlaceholder !== '') {\n          this.currentPlaceholder = this.$refs.input.value ? '' : this.cachedPlaceHolder;\n        }\n      },\n\n      resetInputState(e) {\n        if (e.keyCode !== 8) this.toggleLastOptionHitState(false);\n        this.inputLength = this.$refs.input.value.length * 15 + 20;\n        this.resetInputHeight();\n      },\n\n      resetInputHeight() {\n        if (this.collapseTags && !this.filterable) return;\n        this.$nextTick(() => {\n          if (!this.$refs.reference) return;\n          let inputChildNodes = this.$refs.reference.$el.childNodes;\n          let input = [].filter.call(inputChildNodes, item => item.tagName === 'INPUT')[0];\n          const tags = this.$refs.tags;\n          const sizeInMap = sizeMap[this.selectSize] || 40;\n          input.style.height = this.selected.length === 0\n            ? sizeInMap + 'px'\n            : Math.max(\n              tags ? (tags.clientHeight + (tags.clientHeight > sizeInMap ? 6 : 0)) : 0,\n              sizeInMap\n            ) + 'px';\n          if (this.visible && this.emptyText !== false) {\n            this.broadcast('ElSelectDropdown', 'updatePopper');\n          }\n        });\n      },\n\n      resetHoverIndex() {\n        setTimeout(() => {\n          if (!this.multiple) {\n            this.hoverIndex = this.options.indexOf(this.selected);\n          } else {\n            if (this.selected.length > 0) {\n              this.hoverIndex = Math.min.apply(null, this.selected.map(item => this.options.indexOf(item)));\n            } else {\n              this.hoverIndex = -1;\n            }\n          }\n        }, 300);\n      },\n\n      handleOptionSelect(option, byClick) {\n        if (this.multiple) {\n          const value = this.value.slice();\n          const optionIndex = this.getValueIndex(value, option.value);\n          // if (optionIndex > -1) {\n          //   value.splice(optionIndex, 1);\n          // } else if (this.multipleLimit <= 0 || value.length < this.multipleLimit) {\n          //   value.push(option.value);\n          // }\n          if (this.multipleLimit <= 0 || value.length < this.multipleLimit) {\n            value.push(option.value);\n          }\n          this.$emit('input', value);\n          this.emitChange(value);\n          if (option.created) {\n            this.query = '';\n            this.handleQueryChange('');\n            this.inputLength = 20;\n          }\n          if (this.filterable) this.$refs.input.focus();\n        } else {\n          this.$emit('input', option.value);\n          this.emitChange(option.value);\n          this.visible = false;\n        }\n        this.isSilentBlur = byClick;\n        this.setSoftFocus();\n        if (this.visible) return;\n        this.$nextTick(() => {\n          this.scrollToOption(option);\n        });\n      },\n\n      setSoftFocus() {\n        this.softFocus = true;\n        const input = this.$refs.input || this.$refs.reference;\n        if (input) {\n          input.focus();\n        }\n      },\n\n      getValueIndex(arr = [], value) {\n        const isObject = Object.prototype.toString.call(value).toLowerCase() === '[object object]';\n        if (!isObject) {\n          return arr.indexOf(value);\n        } else {\n          const valueKey = this.valueKey;\n          let index = -1;\n          arr.some((item, i) => {\n            if (getValueByPath(item, valueKey) === getValueByPath(value, valueKey)) {\n              index = i;\n              return true;\n            }\n            return false;\n          });\n          return index;\n        }\n      },\n\n      toggleMenu() {\n        if (!this.selectDisabled) {\n          if (this.menuVisibleOnFocus) {\n            this.menuVisibleOnFocus = false;\n          } else {\n            this.visible = !this.visible;\n          }\n          if (this.visible) {\n            (this.$refs.input || this.$refs.reference).focus();\n          }\n        }\n      },\n\n      selectOption() {\n        if (!this.visible) {\n          this.toggleMenu();\n        } else {\n          if (this.options[this.hoverIndex]) {\n            this.handleOptionSelect(this.options[this.hoverIndex]);\n          }\n        }\n      },\n\n      deleteSelected(event) {\n        event.stopPropagation();\n        this.$emit('input', '');\n        this.emitChange('');\n        this.visible = false;\n        this.$emit('clear');\n      },\n\n      deleteTag(event, tag, i=-1) {\n        let index = i\n        if(index == -1){\n          index = this.selected.indexOf(tag);\n        }\n        if (index > -1 && !this.selectDisabled) {\n          const value = this.value.slice();\n          value.splice(index, 1);\n          this.$emit('input', value);\n          this.emitChange(value);\n          this.$emit('remove-tag', tag.value);\n        }\n        event.stopPropagation();\n      },\n\n      onInputChange() {\n        if (this.filterable && this.query !== this.selectedLabel) {\n          this.query = this.selectedLabel;\n          this.handleQueryChange(this.query);\n        }\n      },\n\n      onOptionDestroy(index) {\n        if (index > -1) {\n          this.optionsCount--;\n          this.filteredOptionsCount--;\n          this.options.splice(index, 1);\n        }\n      },\n\n      resetInputWidth() {\n        this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;\n      },\n\n      handleResize() {\n        this.resetInputWidth();\n        if (this.multiple) this.resetInputHeight();\n      },\n\n      checkDefaultFirstOption() {\n        this.hoverIndex = -1;\n        // highlight the created option\n        let hasCreated = false;\n        for (let i = this.options.length - 1; i >= 0; i--) {\n          if (this.options[i].created) {\n            hasCreated = true;\n            this.hoverIndex = i;\n            break;\n          }\n        }\n        if (hasCreated) return;\n        for (let i = 0; i !== this.options.length; ++i) {\n          const option = this.options[i];\n          if (this.query) {\n            // highlight first options that passes the filter\n            if (!option.disabled && !option.groupDisabled && option.visible) {\n              this.hoverIndex = i;\n              break;\n            }\n          } else {\n            // highlight currently selected option\n            if (option.itemSelected) {\n              this.hoverIndex = i;\n              break;\n            }\n          }\n        }\n      },\n\n      getValueKey(item) {\n        if (Object.prototype.toString.call(item.value).toLowerCase() !== '[object object]') {\n          return item.value;\n        } else {\n          return getValueByPath(item.value, this.valueKey);\n        }\n      }\n    },\n\n    created() {\n      this.cachedPlaceHolder = this.currentPlaceholder = this.placeholder;\n      if (this.multiple && !Array.isArray(this.value)) {\n        this.$emit('input', []);\n      }\n      if (!this.multiple && Array.isArray(this.value)) {\n        this.$emit('input', '');\n      }\n\n      this.debouncedOnInputChange = debounce(this.debounce, () => {\n        this.onInputChange();\n      });\n\n      this.$on('handleOptionClick', this.handleOptionSelect);\n      this.$on('setSelected', this.setSelected);\n    },\n\n    mounted() {\n      if (this.multiple && Array.isArray(this.value) && this.value.length > 0) {\n        this.currentPlaceholder = '';\n      }\n      addResizeListener(this.$el, this.handleResize);\n      if (this.remote && this.multiple) {\n        this.resetInputHeight();\n      }\n      this.$nextTick(() => {\n        if (this.$refs.reference && this.$refs.reference.$el) {\n          this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;\n        }\n      });\n      this.setSelected();\n    },\n\n    beforeDestroy() {\n      if (this.$el && this.handleResize) removeResizeListener(this.$el, this.handleResize);\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/test/select/src/select.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"clickoutside\",rawName:\"v-clickoutside\",value:(_vm.handleClose),expression:\"handleClose\"}],staticClass:\"el-select\",class:[_vm.selectSize ? 'el-select--' + _vm.selectSize : ''],on:{\"click\":function($event){$event.stopPropagation();_vm.toggleMenu($event)}}},[(_vm.multiple)?_c('div',{ref:\"tags\",staticClass:\"el-select__tags\",style:({ 'max-width': _vm.inputWidth - 32 + 'px' })},[(_vm.collapseTags && _vm.selected.length)?_c('span',[_c('el-tag',{attrs:{\"closable\":!_vm.selectDisabled,\"size\":_vm.collapseTagSize,\"hit\":_vm.selected[0].hitState,\"type\":\"info\",\"disable-transitions\":\"\"},on:{\"close\":function($event){_vm.deleteTag($event, _vm.selected[0])}}},[_c('span',{staticClass:\"el-select__tags-text\"},[_vm._v(_vm._s(_vm.selected[0].currentLabel))])]),_vm._v(\" \"),(_vm.selected.length > 1)?_c('el-tag',{attrs:{\"closable\":false,\"size\":_vm.collapseTagSize,\"type\":\"info\",\"disable-transitions\":\"\"}},[_c('span',{staticClass:\"el-select__tags-text\"},[_vm._v(\"+ \"+_vm._s(_vm.selected.length - 1))])]):_vm._e()],1):_vm._e(),_vm._v(\" \"),(!_vm.collapseTags)?_c('transition-group',{on:{\"after-leave\":_vm.resetInputHeight}},_vm._l((_vm.selected),function(item,index){return _c('el-tag',{key:index,attrs:{\"closable\":!_vm.selectDisabled,\"size\":_vm.collapseTagSize,\"hit\":item.hitState,\"type\":\"info\",\"disable-transitions\":\"\"},on:{\"close\":function($event){_vm.deleteTag($event, item, index)}}},[_c('span',{staticClass:\"el-select__tags-text\"},[_vm._v(_vm._s(item.currentLabel))])])})):_vm._e(),_vm._v(\" \"),(_vm.filterable)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.query),expression:\"query\"}],ref:\"input\",staticClass:\"el-select__input\",class:[_vm.selectSize ? (\"is-\" + _vm.selectSize) : ''],style:({ width: _vm.inputLength + 'px', 'max-width': _vm.inputWidth - 42 + 'px' }),attrs:{\"type\":\"text\",\"disabled\":_vm.selectDisabled,\"autocomplete\":_vm.autoComplete,\"debounce\":_vm.remote ? 300 : 0},domProps:{\"value\":(_vm.query)},on:{\"focus\":_vm.handleFocus,\"blur\":function($event){_vm.softFocus = false},\"click\":function($event){$event.stopPropagation();},\"keyup\":_vm.managePlaceholder,\"keydown\":[_vm.resetInputState,function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"down\",40,$event.key)){ return null; }$event.preventDefault();_vm.navigateOptions('next')},function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"up\",38,$event.key)){ return null; }$event.preventDefault();_vm.navigateOptions('prev')},function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key)){ return null; }$event.preventDefault();_vm.selectOption($event)},function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"esc\",27,$event.key)){ return null; }$event.stopPropagation();$event.preventDefault();_vm.visible = false},function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"delete\",[8,46],$event.key)){ return null; }_vm.deletePrevTag($event)}],\"compositionstart\":_vm.handleComposition,\"compositionupdate\":_vm.handleComposition,\"compositionend\":_vm.handleComposition,\"input\":[function($event){if($event.target.composing){ return; }_vm.query=$event.target.value},function (e) { return _vm.handleQueryChange(e.target.value); }]}}):_vm._e()],1):_vm._e(),_vm._v(\" \"),_c('el-input',{ref:\"reference\",class:{ 'is-focus': _vm.visible },attrs:{\"type\":\"text\",\"placeholder\":_vm.currentPlaceholder,\"name\":_vm.name,\"id\":_vm.id,\"auto-complete\":_vm.autoComplete,\"size\":_vm.selectSize,\"disabled\":_vm.selectDisabled,\"readonly\":_vm.readonly,\"validate-event\":false},on:{\"focus\":_vm.handleFocus,\"blur\":_vm.handleBlur},nativeOn:{\"keyup\":function($event){_vm.debouncedOnInputChange($event)},\"keydown\":[function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"down\",40,$event.key)){ return null; }$event.stopPropagation();$event.preventDefault();_vm.navigateOptions('next')},function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"up\",38,$event.key)){ return null; }$event.stopPropagation();$event.preventDefault();_vm.navigateOptions('prev')},function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key)){ return null; }$event.preventDefault();_vm.selectOption($event)},function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"esc\",27,$event.key)){ return null; }$event.stopPropagation();$event.preventDefault();_vm.visible = false},function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"tab\",9,$event.key)){ return null; }_vm.visible = false}],\"paste\":function($event){_vm.debouncedOnInputChange($event)},\"mouseenter\":function($event){_vm.inputHovering = true},\"mouseleave\":function($event){_vm.inputHovering = false}},model:{value:(_vm.selectedLabel),callback:function ($$v) {_vm.selectedLabel=$$v},expression:\"selectedLabel\"}},[(_vm.$slots.prefix)?_c('template',{slot:\"prefix\"},[_vm._t(\"prefix\")],2):_vm._e(),_vm._v(\" \"),(_vm.$slots.suffix)?_c('template',{slot:\"suffix\"},[_vm._t(\"suffix\")],2):_vm._e()],2),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"el-zoom-in-top\"},on:{\"before-enter\":_vm.handleMenuEnter,\"after-leave\":_vm.doDestroy}},[_c('el-select-menu',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.visible && _vm.emptyText !== false),expression:\"visible && emptyText !== false\"}],ref:\"popper\",attrs:{\"append-to-body\":_vm.popperAppendToBody}},[_c('el-scrollbar',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.options.length > 0 && !_vm.loading),expression:\"options.length > 0 && !loading\"}],ref:\"scrollbar\",class:{ 'is-empty': !_vm.allowCreate && _vm.query && _vm.filteredOptionsCount === 0 },attrs:{\"tag\":\"ul\",\"wrap-class\":\"el-select-dropdown__wrap\",\"view-class\":\"el-select-dropdown__list\"}},[(_vm.showNewOption)?_c('el-option',{attrs:{\"value\":_vm.query,\"created\":\"\"}}):_vm._e(),_vm._v(\" \"),_vm._t(\"default\")],2),_vm._v(\" \"),(_vm.emptyText &&\n          (!_vm.allowCreate || _vm.loading || (_vm.allowCreate && _vm.options.length === 0 )))?_c('p',{staticClass:\"el-select-dropdown__empty\"},[_vm._v(\"\\n        \"+_vm._s(_vm.emptyText)+\"\\n      \")]):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-deec29c8\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/test/select/src/select.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./select.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./select.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-deec29c8\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./select.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/test/select/src/select.vue\n// module id = null\n// module chunks = ","export const BAR_MAP = {\n  vertical: {\n    offset: 'offsetHeight',\n    scroll: 'scrollTop',\n    scrollSize: 'scrollHeight',\n    size: 'height',\n    key: 'vertical',\n    axis: 'Y',\n    client: 'clientY',\n    direction: 'top'\n  },\n  horizontal: {\n    offset: 'offsetWidth',\n    scroll: 'scrollLeft',\n    scrollSize: 'scrollWidth',\n    size: 'width',\n    key: 'horizontal',\n    axis: 'X',\n    client: 'clientX',\n    direction: 'left'\n  }\n};\n\nexport function renderThumbStyle({ move, size, bar }) {\n  const style = {};\n  const translate = `translate${bar.axis}(${ move }%)`;\n\n  style[bar.size] = size;\n  style.transform = translate;\n  style.msTransform = translate;\n  style.webkitTransform = translate;\n\n  return style;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/test/scrollbar/src/util.js","import { on, off } from 'element-ui/src/utils/dom';\nimport { renderThumbStyle, BAR_MAP } from './util';\n\n/* istanbul ignore next */\nexport default {\n  name: 'Bar',\n\n  props: {\n    vertical: Boolean,\n    size: String,\n    move: Number\n  },\n\n  computed: {\n    bar() {\n      return BAR_MAP[this.vertical ? 'vertical' : 'horizontal'];\n    },\n\n    wrap() {\n      return this.$parent.wrap;\n    }\n  },\n\n  render(h) {\n    const { size, move, bar } = this;\n\n    return (\n      <div\n        class={ ['el-scrollbar__bar', 'is-' + bar.key] }\n        onMousedown={ this.clickTrackHandler } >\n        <div\n          ref=\"thumb\"\n          class=\"el-scrollbar__thumb\"\n          onMousedown={ this.clickThumbHandler }\n          style={ renderThumbStyle({ size, move, bar }) }>\n        </div>\n      </div>\n    );\n  },\n\n  methods: {\n    clickThumbHandler(e) {\n      this.startDrag(e);\n      this[this.bar.axis] = (e.currentTarget[this.bar.offset] - (e[this.bar.client] - e.currentTarget.getBoundingClientRect()[this.bar.direction]));\n    },\n\n    clickTrackHandler(e) {\n      const offset = Math.abs(e.target.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]);\n      const thumbHalf = (this.$refs.thumb[this.bar.offset] / 2);\n      const thumbPositionPercentage = ((offset - thumbHalf) * 100 / this.$el[this.bar.offset]);\n\n      this.wrap[this.bar.scroll] = (thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100);\n    },\n\n    startDrag(e) {\n      e.stopImmediatePropagation();\n      this.cursorDown = true;\n\n      on(document, 'mousemove', this.mouseMoveDocumentHandler);\n      on(document, 'mouseup', this.mouseUpDocumentHandler);\n      document.onselectstart = () => false;\n    },\n\n    mouseMoveDocumentHandler(e) {\n      if (this.cursorDown === false) return;\n      const prevPage = this[this.bar.axis];\n\n      if (!prevPage) return;\n\n      const offset = ((this.$el.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]) * -1);\n      const thumbClickPosition = (this.$refs.thumb[this.bar.offset] - prevPage);\n      const thumbPositionPercentage = ((offset - thumbClickPosition) * 100 / this.$el[this.bar.offset]);\n\n      this.wrap[this.bar.scroll] = (thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100);\n    },\n\n    mouseUpDocumentHandler(e) {\n      this.cursorDown = false;\n      this[this.bar.axis] = 0;\n      off(document, 'mousemove', this.mouseMoveDocumentHandler);\n      document.onselectstart = null;\n    }\n  },\n\n  destroyed() {\n    off(document, 'mouseup', this.mouseUpDocumentHandler);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/test/scrollbar/src/bar.js","// reference https://github.com/noeldelgado/gemini-scrollbar/blob/master/index.js\n\nimport { addResizeListener, removeResizeListener } from 'element-ui/src/utils/resize-event';\nimport scrollbarWidth from 'element-ui/src/utils/scrollbar-width';\nimport { toObject } from 'element-ui/src/utils/util';\nimport Bar from './bar';\n\n/* istanbul ignore next */\nexport default {\n  name: 'ElScrollbar',\n\n  components: { Bar },\n\n  props: {\n    native: Boolean,\n    wrapStyle: {},\n    wrapClass: {},\n    viewClass: {},\n    viewStyle: {},\n    noresize: Boolean, // 如果 container 尺寸不会发生变化，最好设置它可以优化性能\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n\n  data() {\n    return {\n      sizeWidth: '0',\n      sizeHeight: '0',\n      moveX: 0,\n      moveY: 0\n    };\n  },\n\n  computed: {\n    wrap() {\n      return this.$refs.wrap;\n    }\n  },\n\n  render(h) {\n    let gutter = scrollbarWidth();\n    let style = this.wrapStyle;\n\n    if (gutter) {\n      const gutterWith = `-${gutter}px`;\n      const gutterStyle = `margin-bottom: ${gutterWith}; margin-right: ${gutterWith};`;\n\n      if (Array.isArray(this.wrapStyle)) {\n        style = toObject(this.wrapStyle);\n        style.marginRight = style.marginBottom = gutterWith;\n      } else if (typeof this.wrapStyle === 'string') {\n        style += gutterStyle;\n      } else {\n        style = gutterStyle;\n      }\n    }\n    const view = h(this.tag, {\n      class: ['el-scrollbar__view', this.viewClass],\n      style: this.viewStyle,\n      ref: 'resize'\n    }, this.$slots.default);\n    const wrap = (\n      <div\n        ref=\"wrap\"\n        style={ style }\n        onScroll={ this.handleScroll }\n        class={ [this.wrapClass, 'el-scrollbar__wrap', gutter ? '' : 'el-scrollbar__wrap--hidden-default'] }>\n        { [view] }\n      </div>\n    );\n    let nodes;\n\n    if (!this.native) {\n      nodes = ([\n        wrap,\n        <Bar\n          move={ this.moveX }\n          size={ this.sizeWidth }></Bar>,\n        <Bar\n          vertical\n          move={ this.moveY }\n          size={ this.sizeHeight }></Bar>\n      ]);\n    } else {\n      nodes = ([\n        <div\n          ref=\"wrap\"\n          class={ [this.wrapClass, 'el-scrollbar__wrap'] }\n          style={ style }>\n          { [view] }\n        </div>\n      ]);\n    }\n    return h('div', { class: 'el-scrollbar' }, nodes);\n  },\n\n  methods: {\n    handleScroll() {\n      const wrap = this.wrap;\n\n      this.moveY = ((wrap.scrollTop * 100) / wrap.clientHeight);\n      this.moveX = ((wrap.scrollLeft * 100) / wrap.clientWidth);\n    },\n\n    update() {\n      let heightPercentage, widthPercentage;\n      const wrap = this.wrap;\n      if (!wrap) return;\n\n      heightPercentage = (wrap.clientHeight * 100 / wrap.scrollHeight);\n      widthPercentage = (wrap.clientWidth * 100 / wrap.scrollWidth);\n\n      this.sizeHeight = (heightPercentage < 100) ? (heightPercentage + '%') : '';\n      this.sizeWidth = (widthPercentage < 100) ? (widthPercentage + '%') : '';\n    }\n  },\n\n  mounted() {\n    if (this.native) return;\n    this.$nextTick(this.update);\n    !this.noresize && addResizeListener(this.$refs.resize, this.update);\n  },\n\n  beforeDestroy() {\n    if (this.native) return;\n    !this.noresize && removeResizeListener(this.$refs.resize, this.update);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/test/scrollbar/src/main.js","export default {\n  data() {\n    return {\n      hoverOption: -1\n    };\n  },\n\n  computed: {\n    optionsAllDisabled() {\n      return this.options.filter(option => option.visible).every(option => option.disabled);\n    }\n  },\n\n  watch: {\n    hoverIndex(val) {\n      if (typeof val === 'number' && val > -1) {\n        this.hoverOption = this.options[val] || {};\n      }\n      this.options.forEach(option => {\n        option.hover = this.hoverOption === option;\n      });\n    }\n  },\n\n  methods: {\n    navigateOptions(direction) {\n      if (!this.visible) {\n        this.visible = true;\n        return;\n      }\n      if (this.options.length === 0 || this.filteredOptionsCount === 0) return;\n      if (!this.optionsAllDisabled) {\n        if (direction === 'next') {\n          this.hoverIndex++;\n          if (this.hoverIndex === this.options.length) {\n            this.hoverIndex = 0;\n          }\n        } else if (direction === 'prev') {\n          this.hoverIndex--;\n          if (this.hoverIndex < 0) {\n            this.hoverIndex = this.options.length - 1;\n          }\n        }\n        const option = this.options[this.hoverIndex];\n        if (option.disabled === true ||\n          option.groupDisabled === true ||\n          !option.visible) {\n          this.navigateOptions(direction);\n        }\n        this.$nextTick(() => this.scrollToOption(this.hoverOption));\n      }\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/test/select/src/navigation-mixin.js"],"sourceRoot":""}